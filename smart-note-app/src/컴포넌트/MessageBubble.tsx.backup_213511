
import React from 'react';
import { 스마트시간포맷팅 } from '../유틸/시간표시';

// 아이콘 타입 정의
type 아이콘타입 = '주인공' | '악당' | '주민' | '중요' | '기본';

// 캐릭터 아이콘 컴포넌트
const 캐릭터아이콘: React.FC<{ 아이콘: 아이콘타입 }> = ({ 아이콘 }) => {
  const 아이콘스타일: React.CSSProperties = {
    width: '24px',
    height: '24px',
    borderRadius: '50%',
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
    fontSize: '14px',
    fontWeight: 'bold',
    marginRight: '8px',
    color: 'white',
    flexShrink: 0,
  };

  switch (아이콘) {
    case '주인공':
      return <div style={{ ...아이콘스타일, backgroundColor: '#007bff' }}>P</div>;
    case '악당':
      return <div style={{ ...아이콘스타일, backgroundColor: '#dc3545' }}>V</div>;
    case '주민':
      return <div style={{ ...아이콘스타일, backgroundColor: '#6c757d' }}>R</div>;
    case '중요':
        return <div style={{ ...아이콘스타일, backgroundColor: '#ffc107' }}>!</div>;
    default:
      return <div style={{ ...아이콘스타일, backgroundColor: '#28a745' }}>C</div>;
  }
};

// 메시지 타입 정의
interface 메시지타입 {
  아이디: string;
  텍스트: string;
  타임스탬프: string;
  작성자?: string;
  말풍선위치?: '왼쪽' | '오른쪽';
  캐릭터아이콘?: 아이콘타입;
  말풍선색상?: string;
}

interface MessageBubbleProps {
  메시지: 메시지타입;
  시간표시여부: boolean;
  on시간표시토글: (id: string) => void;
  확장된시간목록: Set<string>;
}

const MessageBubble: React.FC<MessageBubbleProps> = ({ 
  메시지, 
  시간표시여부,
  on시간표시토글,
  확장된시간목록
}) => {
  const {
    아이디,
    텍스트,
    타임스탬프,
    작성자,
    말풍선위치 = '왼쪽',
    캐릭터아이콘: 메시지캐릭터아이콘 = '기본',
    말풍선색상 = '#e9ecef',
  } = 메시지;

  const isRight = 말풍선위치 === '오른쪽';
  const 시간표시정보 = 스마트시간포맷팅(타임스탬프);
  const 시간확장됨 = 확장된시간목록.has(아이디);

  const 컨테이너스타일: React.CSSProperties = {
    display: 'flex',
    marginBottom: '16px',
    justifyContent: isRight ? 'flex-end' : 'flex-start',
  };

  const 버블컨테이너스타일: React.CSSProperties = {
    display: 'flex',
    alignItems: 'flex-start',
    maxWidth: '85%',
    flexDirection: isRight ? 'row-reverse' : 'row',
  };

  const 버블스타일: React.CSSProperties = {
    backgroundColor: isRight ? '#007bff' : 말풍선색상,
    color: isRight ? 'white' : '#212529',
    padding: '10px 15px',
    borderRadius: '18px',
    boxShadow: '0 2px 4px rgba(0,0,0,0.1)',
    wordBreak: 'break-word',
    position: 'relative',
  };

  const 작성자스타일: React.CSSProperties = {
    fontSize: '13px',
    fontWeight: 'bold',
    marginBottom: '4px',
    color: isRight ? '#f8f9fa' : '#343a40',
    textAlign: isRight ? 'right' : 'left',
    marginRight: isRight ? '10px' : '0',
    marginLeft: isRight ? '0' : '10px',
  };

  const 시간스타일: React.CSSProperties = {
    fontSize: '11px',
    color: '#6c757d',
    cursor: 시간표시정보.클릭가능 ? 'pointer' : 'default',
    alignSelf: 'flex-end',
    margin: '0 5px',
    whiteSpace: 'nowrap',
  };

  return (
    <div style={컨테이너스타일}>
      <div style={버블컨테이너스타일}>
        <캐릭터아이콘 아이콘={메시지캐릭터아이콘} />
        <div style={{ display: 'flex', alignItems: 'flex-end', flexDirection: isRight ? 'row-reverse' : 'row' }}>
          <div style={{
            order: isRight ? 2 : 1,
            ...(isRight ? { marginRight: '8px' } : { marginLeft: '8px' })
          }}>
            {작성자 && <div style={작성자스타일}>{작성자}</div>}
            <div style={버블스타일}>
              {텍스트}
            </div>
          </div>
          {시간표시여부 && (
            <div 
              style={{...시간스타일, order: isRight ? 1 : 2}}
              title={시간표시정보.클릭가능 ? '상세 시간 보기' : 시간표시정보.전체시간}
              onClick={() => on시간표시토글(아이디)}
            >
              {시간확장됨 ? 시간표시정보.상세표시텍스트 : 시간표시정보.표시텍스트}
            </div>
          )}
        </div>
      </div>
    </div>
  );
};

export default MessageBubble;
